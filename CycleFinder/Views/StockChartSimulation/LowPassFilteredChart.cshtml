@model CycleFinder.Models.StockChartSimulationViewModel

@{
    ViewData["Title"] = "About";
}


<div id="containerWave" style="width: 1000px; height: 500px; margin: 0 auto"></div>
<div id="containerFilters" style="width: 1000px; height: 500px; margin: 0 auto"></div>


<script language="JavaScript">
function drawChartWave() {
   // Define the chart to be drawn.
   var data = new google.visualization.DataTable();
   data.addColumn('number', 'Time');
   @Html.DisplayFor(x => x.WaveOutputs) //adds column per wave
   data.addRows([
        @Model.WaveOutputsFormatted
   ]);
   
   // Set chart options
   var options = {'title' : 'Wave Chart',
      hAxis: {
         title: 'Time'
      },
      vAxis: {
         title: 'Price'
      },   
      'width': 900, 
      'height':500    
   };

   // Instantiate and draw the chart.
   //var chart = new google.charts.Line(document.getElementById('containerWave'));
	var chart = new google.visualization.LineChart(document.getElementById('containerWave'));
	chart.draw(data, options);
   //chart.draw(data, google.charts.Line.convertOptions(options));	
}
	
function drawChartFilters() {
   // Define the chart to be drawn.
   var data = new google.visualization.DataTable();
   data.addColumn('number', 'Frequency');
   @Html.DisplayFor(x => x.FilterOnly) 
   data.addRows([
        @Model.InputSignalConvolutedFormatted;  what i want here is a chart helper - GChart.RowsFor(InputSignalConvoluted.OutputSeries)test
   ]);
   
   // Set chart options
   var options = {'title' : 'Band Pass Filter',
	  
      hAxis: {
         title: 'Time'
      },
      vAxis: {
         title: 'Price'
	     
      },   
      'width': 900, 
      'height':500    
   };	

   // Instantiate and draw the chart.
   //var chart = new google.charts.Line(document.getElementById('containerBandPass'));
	var chart = new google.visualization.LineChart(document.getElementById('containerFilters'));
	chart.draw(data, options);
   //chart.draw(data, google.charts.Line.convertOptions(options));
}
//google.charts.load('current', {'packages': ['line']});
	google.charts.load('current', {'packages': ['corechart']});
google.charts.setOnLoadCallback(drawChartWave);
google.charts.setOnLoadCallback(drawChartFilters);
</script>
